const CREATE_APPOINTMENT = 'CREATE_APPOINTMENT';

export const createNewAppointment = async (userid, datareserve) => {
  const {
    disease, city, appointmentDate, appointmentTime, doctorID,
  } = datareserve;
  const UserId = `${userid}`;
  const reservation = {
    disease,
    city,
    appointmentDate,
    appointmentTime,
    user: UserId,
    doctor: doctorID,
  };
  const resp = await fetch(`http://127.0.0.1:3000/users/${userid}/appointments`, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({
      reservation,
    }),
  });
  const data = await resp.text();
  return data;
};

export const createAppointment = (userid, data) => async (dispatch) => {
  const appiontment = await createNewAppointment(userid, data);
  dispatch({
    type: CREATE_APPOINTMENT,
    payload: appiontment,
  });
};




































import React, { useState } from 'react';
import { useDispatch, useSelector } from 'react-redux';
import { postReserve } from '../redux/Reserve/reserveSlice';

const BookAppointment = () => {
  const dispatch = useDispatch();
  const doctordata = useSelector((state) => state.doctorReducer);
  // const { userid } = JSON.parse(window.localStorage.getItem('BookDoctorUser'));
  // const userID = userid || 1;
  const { payload } = doctordata;
  const doctorID = payload?.doctor.id;
  const [disease, setDisease] = useState();
  const [city, setCity] = useState();
  const [date, setDate] = useState();
  const [time, setTime] = useState();

  const newAppointment = (e) => {
    e.preventDefault();
    if (date === '') return;
    const newUser = {
      disease,
      city,
      date,
      time,
      doctorID,
    };
    dispatch(postReserve(userID, newUser));
    setDisease('');
    setCity('');
    setDate('');
    setTime('');
  };

  return (
    <section>
      <h2>Book Doctor Appiontment</h2>
      {/* { payload ? ( */}
        <ul>
          <li>
            <p>Doctor name: </p>
            <p>Doctor name: </p>
            {/* <p>{payload.doctor.name}</p> */}
          </li>
          <li>
            <p>Doctor address: </p>
            <p>Doctor address: </p>
            {/* <p>{payload.doctor.city}</p> */}
          </li>
        </ul>
      // )
        // : 
        <h4>Kindly Go back to doctors list to select your favourite doctor</h4>
        {/* } */}
      <form onSubmit={newAppointment}>
        <div>
          <h3>Fill In The Form To Book Appiontment</h3>
          <input
            type="text"
            placeholder="Enter Your Disease"
            // value={disease}
          />
          <input
            type="text"
            placeholder="Enter Your Address"
            // value={city}
          />
          <input
            type="date"
            id="date"
            placeholder="date"
            onChange={(e) => setDate(e.target.value)}
            // value={date}
          />
          <input
            type="time"
            id="date"
            placeholder="time for appiontment"
            onChange={(e) => setTime(e.target.value)}
            // value={time}
          />
        </div>
      </form>
    </section>
  );
};

export default BookAppointment;
